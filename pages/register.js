import Button from '@/components/Button';
import Input from '@/components/Input';
import Head from 'next/head';
import { useEffect, useState } from 'react';

import Script from 'next/script';
import { HiUserCircle } from 'react-icons/hi';
import { useRouter } from 'next/router';
import fetchData from '@/hooks/fetchData';
import toast, { Toaster } from 'react-hot-toast';



export default function FundWallet() {

  const router = useRouter();
  const [loading, setLoading] = useState(false);
  const [form, setForm] = useState({ });


  const handleSubmit = async() => {
    return toast.success('Account Created');
    setLoading(true);

    const { status, data } = await fetchData('/api/register', { 
      method: 'POST',
      body: form 
    });
    
    setLoading(false)
    if(status === 2){
      setTimeout(() => {
        router.push('/login');
      }, 1000)
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="max-w-md mx-auto h-screen flex flex-col p-4 gap-4 bg-neutral-50">

        <Toaster 
          toastOptions={{
            className: 'text-sm',
          }}
        />

        <div className='p-3'>
          <p className='text-center font-bold'>Register</p>
        </div>

        <div className='bg-white rounded-lg p-5 flex flex-col gap-2 justify-center items-center'>
          <HiUserCircle className="text-[6rem] text-green-400" />
          {/* <p className='font-bold text-xs'>Profile Image</p> */}
        </div>

        
        <div className='space-y-3 bg-white'>

          <Input
            name="fullname"
            placeholder="Enter Fullname"
            onChange={(e) => setForm({ ...form, [e.target.name]: e.target.value })}
            required
          />

          <Input
            name="email"
            placeholder="Enter Email"
            type="email"
            onChange={(e) => setForm({ ...form, [e.target.name]: e.target.value })}
            value={ form.email }
            validateExists
            required
          />

          <Input
            name="tag"
            placeholder="User tag"
            onChange={(e) => setForm({...form, [e.target.name]: e.target.value.search(/^@/) === 0 ? e.target.value : '@'+e.target.value })}
            value={(form.tag || '').search(/^@/) === 0 ? form.tag || '' : '@'+ (form.tag || '')}
            // error={tagError && 'User tag not available'}
            // success={tagSuccess && ('Tag Available')}
            validateExists
            required
          />

          <Input
            name="password"
            type="password"
            placeholder="Enter Password"
            onChange={(e) => setForm({ ...form, [e.target.name]: e.target.value })}
            required
          />

          <Button
            text="Sign Up"
            onClick={handleSubmit}
            loading={loading}
          />

        </div>
        
      </main>
    </>
  )
}
